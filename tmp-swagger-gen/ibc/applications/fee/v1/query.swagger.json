{
  "swagger": "2.0",
  "info": {
    "title": "ibc/applications/fee/v1/query.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/ibc/apps/fee/v1/channels/{channel_id}/ports/{port_id}/fee_enabled": {
      "get": {
        "summary": "FeeEnabledChannel returns true if the provided port and channel identifiers belong to a fee enabled channel",
        "operationId": "FeeEnabledChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.fee.v1.QueryFeeEnabledChannelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "channel_id",
            "description": "unique channel identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "port_id",
            "description": "unique port identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/fee/v1/channels/{channel_id}/ports/{port_id}/incentivized_packets": {
      "get": {
        "summary": "Gets all incentivized packets for a specific channel",
        "operationId": "IncentivizedPacketsForChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "port_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "query_height",
            "description": "Height to query at.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/fee/v1/channels/{channel_id}/relayers/{relayer}/counterparty_payee": {
      "get": {
        "summary": "CounterpartyPayee returns the registered counterparty payee for forward relaying",
        "operationId": "CounterpartyPayee",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.fee.v1.QueryCounterpartyPayeeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "channel_id",
            "description": "unique channel identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayer",
            "description": "the relayer address to which the counterparty is registered",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/fee/v1/channels/{channel_id}/relayers/{relayer}/payee": {
      "get": {
        "summary": "Payee returns the registered payee address for a specific channel given the relayer address",
        "operationId": "Payee",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.fee.v1.QueryPayeeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "channel_id",
            "description": "unique channel identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayer",
            "description": "the relayer address to which the distribution address is registered",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/incentivized_packet": {
      "get": {
        "summary": "IncentivizedPacket returns all packet fees for a packet given its identifier",
        "operationId": "IncentivizedPacket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.fee.v1.QueryIncentivizedPacketResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "packet_id.channel_id",
            "description": "channel unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "packet_id.port_id",
            "description": "channel port identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "packet_id.sequence",
            "description": "packet sequence",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "query_height",
            "description": "block height at which to query.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/total_ack_fees": {
      "get": {
        "summary": "TotalAckFees returns the total acknowledgement fees for a packet given its identifier",
        "operationId": "TotalAckFees",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.fee.v1.QueryTotalAckFeesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "packet_id.channel_id",
            "description": "channel unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "packet_id.port_id",
            "description": "channel port identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "packet_id.sequence",
            "description": "packet sequence",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/total_recv_fees": {
      "get": {
        "summary": "TotalRecvFees returns the total receive fees for a packet given its identifier",
        "operationId": "TotalRecvFees",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.fee.v1.QueryTotalRecvFeesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "packet_id.channel_id",
            "description": "channel unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "packet_id.port_id",
            "description": "channel port identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "packet_id.sequence",
            "description": "packet sequence",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/total_timeout_fees": {
      "get": {
        "summary": "TotalTimeoutFees returns the total timeout fees for a packet given its identifier",
        "operationId": "TotalTimeoutFees",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "packet_id.channel_id",
            "description": "channel unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "packet_id.port_id",
            "description": "channel port identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "packet_id.sequence",
            "description": "packet sequence",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/fee/v1/fee_enabled": {
      "get": {
        "summary": "FeeEnabledChannels returns a list of all fee enabled channels",
        "operationId": "FeeEnabledChannels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "query_height",
            "description": "block height at which to query.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/fee/v1/incentivized_packets": {
      "get": {
        "summary": "IncentivizedPackets returns all incentivized packets and their associated fees",
        "operationId": "IncentivizedPackets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.fee.v1.QueryIncentivizedPacketsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "query_height",
            "description": "block height at which to query.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "cosmos.base.query.v1beta1.PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "count_total": {
          "type": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set."
        },
        "reverse": {
          "type": "boolean",
          "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:"
    },
    "cosmos.base.v1beta1.Coin": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      },
      "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "ibc.applications.fee.v1.Fee": {
      "type": "object",
      "properties": {
        "recv_fee": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "title": "the packet receive fee"
        },
        "ack_fee": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "title": "the packet acknowledgement fee"
        },
        "timeout_fee": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "title": "the packet timeout fee"
        }
      },
      "title": "Fee defines the ICS29 receive, acknowledgement and timeout fees"
    },
    "ibc.applications.fee.v1.FeeEnabledChannel": {
      "type": "object",
      "properties": {
        "port_id": {
          "type": "string",
          "title": "unique port identifier"
        },
        "channel_id": {
          "type": "string",
          "title": "unique channel identifier"
        }
      },
      "title": "FeeEnabledChannel contains the PortID \u0026 ChannelID for a fee enabled channel"
    },
    "ibc.applications.fee.v1.IdentifiedPacketFees": {
      "type": "object",
      "properties": {
        "packet_id": {
          "$ref": "#/definitions/ibc.core.channel.v1.PacketId",
          "title": "unique packet identifier comprised of the channel ID, port ID and sequence"
        },
        "packet_fees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ibc.applications.fee.v1.PacketFee"
          },
          "title": "list of packet fees"
        }
      },
      "title": "IdentifiedPacketFees contains a list of type PacketFee and associated PacketId"
    },
    "ibc.applications.fee.v1.PacketFee": {
      "type": "object",
      "properties": {
        "fee": {
          "$ref": "#/definitions/ibc.applications.fee.v1.Fee",
          "title": "fee encapsulates the recv, ack and timeout fees associated with an IBC packet"
        },
        "refund_address": {
          "type": "string",
          "title": "the refund address for unspent fees"
        },
        "relayers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "optional list of relayers permitted to receive fees"
        }
      },
      "title": "PacketFee contains ICS29 relayer fees, refund address and optional list of permitted relayers"
    },
    "ibc.applications.fee.v1.QueryCounterpartyPayeeResponse": {
      "type": "object",
      "properties": {
        "counterparty_payee": {
          "type": "string",
          "title": "the counterparty payee address used to compensate forward relaying"
        }
      },
      "title": "QueryCounterpartyPayeeResponse defines the response type for the CounterpartyPayee rpc"
    },
    "ibc.applications.fee.v1.QueryFeeEnabledChannelResponse": {
      "type": "object",
      "properties": {
        "fee_enabled": {
          "type": "boolean",
          "title": "boolean flag representing the fee enabled channel status"
        }
      },
      "title": "QueryFeeEnabledChannelResponse defines the response type for the FeeEnabledChannel rpc"
    },
    "ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse": {
      "type": "object",
      "properties": {
        "fee_enabled_channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ibc.applications.fee.v1.FeeEnabledChannel"
          },
          "title": "list of fee enabled channels"
        }
      },
      "title": "QueryFeeEnabledChannelsResponse defines the response type for the FeeEnabledChannels rpc"
    },
    "ibc.applications.fee.v1.QueryIncentivizedPacketResponse": {
      "type": "object",
      "properties": {
        "incentivized_packet": {
          "$ref": "#/definitions/ibc.applications.fee.v1.IdentifiedPacketFees",
          "title": "the identified fees for the incentivized packet"
        }
      },
      "title": "QueryIncentivizedPacketsResponse defines the response type for the IncentivizedPacket rpc"
    },
    "ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse": {
      "type": "object",
      "properties": {
        "incentivized_packets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ibc.applications.fee.v1.IdentifiedPacketFees"
          },
          "title": "Map of all incentivized_packets"
        }
      },
      "title": "QueryIncentivizedPacketsResponse defines the response type for the incentivized packets RPC"
    },
    "ibc.applications.fee.v1.QueryIncentivizedPacketsResponse": {
      "type": "object",
      "properties": {
        "incentivized_packets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ibc.applications.fee.v1.IdentifiedPacketFees"
          },
          "title": "list of identified fees for incentivized packets"
        }
      },
      "title": "QueryIncentivizedPacketsResponse defines the response type for the IncentivizedPackets rpc"
    },
    "ibc.applications.fee.v1.QueryPayeeResponse": {
      "type": "object",
      "properties": {
        "payee_address": {
          "type": "string",
          "title": "the payee address to which packet fees are paid out"
        }
      },
      "title": "QueryPayeeResponse defines the response type for the Payee rpc"
    },
    "ibc.applications.fee.v1.QueryTotalAckFeesResponse": {
      "type": "object",
      "properties": {
        "ack_fees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "title": "the total packet acknowledgement fees"
        }
      },
      "title": "QueryTotalAckFeesResponse defines the response type for the TotalAckFees rpc"
    },
    "ibc.applications.fee.v1.QueryTotalRecvFeesResponse": {
      "type": "object",
      "properties": {
        "recv_fees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "title": "the total packet receive fees"
        }
      },
      "title": "QueryTotalRecvFeesResponse defines the response type for the TotalRecvFees rpc"
    },
    "ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse": {
      "type": "object",
      "properties": {
        "timeout_fees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "title": "the total packet timeout fees"
        }
      },
      "title": "QueryTotalTimeoutFeesResponse defines the response type for the TotalTimeoutFees rpc"
    },
    "ibc.core.channel.v1.PacketId": {
      "type": "object",
      "properties": {
        "port_id": {
          "type": "string",
          "title": "channel port identifier"
        },
        "channel_id": {
          "type": "string",
          "title": "channel unique identifier"
        },
        "sequence": {
          "type": "string",
          "format": "uint64",
          "title": "packet sequence"
        }
      },
      "title": "PacketId is an identifer for a unique Packet\nSource chains refer to packets by source port/channel\nDestination chains refer to packets by destination port/channel"
    }
  }
}
